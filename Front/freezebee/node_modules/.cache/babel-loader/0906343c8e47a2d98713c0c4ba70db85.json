{"ast":null,"code":"var _jsxFileName = \"C:\\\\dev\\\\cybersecurite\\\\freezebee\\\\src\\\\pages\\\\ingredientPage\\\\IngredientToModelForm.js\";\nimport React, { Component } from 'react';\nimport '../../App.css';\nimport { Button, Modal } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass IngredientToModelForm extends Component {\n  constructor(props, show, handleClose) {\n    super(props);\n    this.state = {\n      models: [],\n      selectedModel: '',\n      ingredients: [],\n      selectedIngredient: '',\n      grammage: ''\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    const showHideClassName = show ? \"modal display-block\" : \"modal display-none\";\n  }\n\n  componentDidMount() {\n    fetch(\"data.json\", {\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n      }\n    }).then(res => res.json()).then(result => {\n      console.log(result);\n      this.setState({\n        models: result.models,\n        selectedModel: result.models[0],\n        ingredients: result.ingredients,\n        selectedIngredient: result.ingredients[0]\n      });\n      console.log(this.state);\n    }, error => {\n      this.setState({\n        erreur: error.message\n      });\n    });\n  }\n\n  handleChange(event) {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    console.log(this.state);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Modal, { ...this.props,\n        size: \"lg\",\n        \"aria-labelledby\": \"contained-modal-title-vcenter\",\n        centered: true,\n        children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n          closeButton: true,\n          children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n            id: \"contained-modal-title-vcenter\",\n            children: \"Modal heading\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Centered Modal\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Cras mattis consectetur purus sit amet fermentum. Cras justo odio, dapibus ac facilisis in, egestas eget quam. Morbi leo risus, porta ac consectetur ac, vestibulum at eros.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            onClick: handleClose,\n            children: \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this) // <div className={showHideClassName}>\n    //     <h1>Créer un ingrédient</h1>\n    //     <Form id=\"ingredientForm\" onSubmit={this.handleSubmit}>\n    //         <FormGroup className=\"mb-3\" controlId=\"selectedModel\">\n    //             <FormLabel>\n    //                 Modèle\n    //             </FormLabel>\n    //             <FormSelect name=\"selectedModel\" value={this.state.selectedModel} onChange={this.handleChange}>\n    //                 {this.state.models.map(model => (\n    //                         <option value={model.nom} key={model.nom}>\n    //                             {model.nom}\n    //                         </option>\n    //                     )\n    //                 )}\n    //             </FormSelect>\n    //         </FormGroup>\n    //         <FormGroup className=\"mb-3\" controlId=\"selectedIngredient\">\n    //             <FormLabel>\n    //                 Ingredients\n    //             </FormLabel>\n    //             <FormSelect name=\"selectedIngredient\" value={this.state.selectedIngredient} onChange={this.handleChange}>\n    //                 {this.state.ingredients.map(ingredient => (\n    //                         <option value={ingredient.nom} key={ingredient.nom}>\n    //                             {ingredient.nom}\n    //                         </option>\n    //                     )\n    //                 )}\n    //             </FormSelect>\n    //         </FormGroup>\n    //         <FormGroup className=\"mb-3\" controlId=\"grammage\">\n    //             <FormLabel>\n    //                 Grammage\n    //             </FormLabel>\n    //             <FormControl pattern=\"[0-9]\" required type=\"number\" placeholder=\"Grammage du freezebee\" name=\"grammage\" value={this.state.grammage} onChange={this.handleChange}>\n    //             </FormControl>\n    //         </FormGroup>\n    //         <Button variant=\"primary\" type=\"submit\">\n    //             Envoyer\n    //         </Button>\n    //     </Form>\n    // </div>\n    ;\n  }\n\n}\n\nexport default IngredientToModelForm;","map":{"version":3,"sources":["C:/dev/cybersecurite/freezebee/src/pages/ingredientPage/IngredientToModelForm.js"],"names":["React","Component","Button","Modal","IngredientToModelForm","constructor","props","show","handleClose","state","models","selectedModel","ingredients","selectedIngredient","grammage","handleChange","bind","handleSubmit","showHideClassName","componentDidMount","fetch","headers","then","res","json","result","console","log","setState","error","erreur","message","event","target","name","value","preventDefault","render"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport '../../App.css';\r\nimport { Button, Modal } from 'react-bootstrap';\r\n\r\nclass IngredientToModelForm extends Component {\r\n    constructor(props, show, handleClose) {\r\n        super(props);\r\n        this.state = {models: [], selectedModel: '', ingredients: [], selectedIngredient: '', grammage: ''};\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n\r\n        const showHideClassName = show ? \"modal display-block\" : \"modal display-none\";\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch(\"data.json\", {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Accept': 'application/json'\r\n            }\r\n        }\r\n        ).then(res => res.json())\r\n        .then(\r\n            (result) => {\r\n                console.log(result);\r\n                this.setState({\r\n                    models: result.models,\r\n                    selectedModel: result.models[0],\r\n                    ingredients: result.ingredients,\r\n                    selectedIngredient: result.ingredients[0]\r\n                });\r\n                console.log(this.state)\r\n            },\r\n            (error) => {\r\n                this.setState({\r\n                    erreur: error.message\r\n                });\r\n            }\r\n        )\r\n    }\r\n\r\n    handleChange(event) {\r\n        this.setState(\r\n            {[event.target.name] : event.target.value}\r\n        );\r\n      }\r\n    \r\n    handleSubmit(event) {\r\n        event.preventDefault();\r\n        console.log(this.state);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Modal\r\n                    {...this.props}\r\n                    size=\"lg\"\r\n                    aria-labelledby=\"contained-modal-title-vcenter\"\r\n                    centered\r\n                    >\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                        Modal heading\r\n                        </Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <h4>Centered Modal</h4>\r\n                        <p>\r\n                        Cras mattis consectetur purus sit amet fermentum. Cras justo odio,\r\n                        dapibus ac facilisis in, egestas eget quam. Morbi leo risus, porta ac\r\n                        consectetur ac, vestibulum at eros.\r\n                        </p>\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                        <Button onClick={handleClose}>Close</Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n            </div>\r\n            // <div className={showHideClassName}>\r\n            //     <h1>Créer un ingrédient</h1>\r\n            //     <Form id=\"ingredientForm\" onSubmit={this.handleSubmit}>\r\n            //         <FormGroup className=\"mb-3\" controlId=\"selectedModel\">\r\n            //             <FormLabel>\r\n            //                 Modèle\r\n            //             </FormLabel>\r\n            //             <FormSelect name=\"selectedModel\" value={this.state.selectedModel} onChange={this.handleChange}>\r\n            //                 {this.state.models.map(model => (\r\n            //                         <option value={model.nom} key={model.nom}>\r\n            //                             {model.nom}\r\n            //                         </option>\r\n            //                     )\r\n            //                 )}\r\n            //             </FormSelect>\r\n            //         </FormGroup>\r\n            //         <FormGroup className=\"mb-3\" controlId=\"selectedIngredient\">\r\n            //             <FormLabel>\r\n            //                 Ingredients\r\n            //             </FormLabel>\r\n            //             <FormSelect name=\"selectedIngredient\" value={this.state.selectedIngredient} onChange={this.handleChange}>\r\n            //                 {this.state.ingredients.map(ingredient => (\r\n            //                         <option value={ingredient.nom} key={ingredient.nom}>\r\n            //                             {ingredient.nom}\r\n            //                         </option>\r\n            //                     )\r\n            //                 )}\r\n            //             </FormSelect>\r\n            //         </FormGroup>\r\n            //         <FormGroup className=\"mb-3\" controlId=\"grammage\">\r\n            //             <FormLabel>\r\n            //                 Grammage\r\n            //             </FormLabel>\r\n            //             <FormControl pattern=\"[0-9]\" required type=\"number\" placeholder=\"Grammage du freezebee\" name=\"grammage\" value={this.state.grammage} onChange={this.handleChange}>\r\n            //             </FormControl>\r\n            //         </FormGroup>\r\n            //         <Button variant=\"primary\" type=\"submit\">\r\n            //             Envoyer\r\n            //         </Button>\r\n            //     </Form>\r\n            // </div>\r\n        );\r\n      }\r\n}\r\n\r\nexport default IngredientToModelForm;"]},"metadata":{},"sourceType":"module"}