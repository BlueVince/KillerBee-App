{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vince\\\\OneDrive\\\\Documents\\\\A5 - Option 1\\\\cybersecurite\\\\freezebee\\\\src\\\\pages\\\\ingredientPage\\\\IngredientToModelForm.js\";\nimport React, { Component } from 'react';\nimport '../../App.css';\nimport { Button, FormLabel, FormControl, Form, FormGroup, FormSelect, Modal } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst fetching = require('../../encryption/fetching');\n\nclass IngredientToModelForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onClose = e => {\n      this.props.onClose && this.props.onClose(e);\n    };\n\n    this.state = {\n      models: [],\n      selectedModel: '',\n      ingredients: [],\n      selectedIngredient: '',\n      grammage: 0\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    let token = localStorage.getItem('token');\n    fetching.FetchAPI('localhost:8080', '/Ingredient/Select/', {\n      token: token\n    }, (err, result) => {\n      if (!err) {\n        this.setState({\n          ingredients: result.recordset,\n          selectedIngredient: result.recordset[0].ing_ID\n        });\n      } else console.error(err);\n    });\n    fetching.FetchAPI('localhost:8080', '/Modele/Select/', {\n      token: token\n    }, (err, result) => {\n      if (!err) {\n        this.setState({\n          models: result.recordset,\n          selectedModel: result.recordset[0].mod_ID\n        });\n      } else console.error(err);\n    });\n  }\n\n  handleChange(event) {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  }\n\n  async handleSubmit(event) {\n    event.preventDefault();\n    let modele = this.state.selectedModel;\n    let ingredient = this.state.selectedIngredient;\n    let grammage = this.state.grammage;\n    let token = localStorage.getItem('token');\n    fetching.FetchAPI('localhost:8080', '/IngredientModele/Insert/', {\n      modele: modele,\n      ingredient: ingredient,\n      grammage: grammage,\n      token: token\n    }, (err, result) => {\n      if (!err) {\n        console.log(result);\n        window.location.reload(true);\n      } else console.error(err);\n    });\n    this.setState({\n      selectedModel: '',\n      selectedIngredient: '',\n      grammage: 0\n    });\n  }\n\n  render() {\n    if (!this.props.show) {\n      return null;\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-display\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Ajouter un ingr\\xE9dient \\xE0 un mod\\xE8le\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form, {\n          id: \"ingredientForm\",\n          onSubmit: this.handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n            className: \"mb-3\",\n            controlId: \"selectedModel\",\n            children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n              children: \"Mod\\xE8le\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(FormSelect, {\n              name: \"selectedModel\",\n              value: this.state.selectedModel,\n              onChange: this.handleChange,\n              children: this.state.models.map(model => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: model.mod_ID,\n                children: model.mod_nom\n              }, model.mod_ID, false, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 37\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n            className: \"mb-3\",\n            controlId: \"selectedIngredient\",\n            children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n              children: \"Ingredients\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(FormSelect, {\n              name: \"selectedIngredient\",\n              value: this.state.selectedIngredient,\n              onChange: this.handleChange,\n              children: this.state.ingredients.map(ingredient => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: ingredient.ing_ID,\n                children: ingredient.ing_nom\n              }, ingredient.ing_ID, false, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 37\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n            className: \"mb-3\",\n            controlId: \"grammage\",\n            children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n              children: \"Grammage\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n              pattern: \"[0-9]\",\n              required: true,\n              type: \"number\",\n              placeholder: \"Grammage du freezebee\",\n              name: \"grammage\",\n              value: this.state.grammage,\n              onChange: this.handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            type: \"submit\",\n            children: \"Envoyer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default IngredientToModelForm;","map":{"version":3,"sources":["C:/Users/vince/OneDrive/Documents/A5 - Option 1/cybersecurite/freezebee/src/pages/ingredientPage/IngredientToModelForm.js"],"names":["React","Component","Button","FormLabel","FormControl","Form","FormGroup","FormSelect","Modal","fetching","require","IngredientToModelForm","constructor","props","onClose","e","state","models","selectedModel","ingredients","selectedIngredient","grammage","handleChange","bind","handleSubmit","componentDidMount","token","localStorage","getItem","FetchAPI","err","result","setState","recordset","ing_ID","console","error","mod_ID","event","target","name","value","preventDefault","modele","ingredient","log","window","location","reload","render","show","map","model","mod_nom","ing_nom"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport '../../App.css';\r\nimport {Button, FormLabel, FormControl, Form, FormGroup, FormSelect, Modal} from 'react-bootstrap';\r\n\r\nconst fetching = require('../../encryption/fetching');\r\n\r\nclass IngredientToModelForm extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {models: [], selectedModel: '', ingredients: [], selectedIngredient: '', grammage: 0};\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    onClose = e => {\r\n        this.props.onClose && this.props.onClose(e);\r\n    };\r\n\r\n    componentDidMount() {\r\n        let token = localStorage.getItem('token');\r\n        fetching.FetchAPI('localhost:8080', '/Ingredient/Select/', {token: token}, (err, result) => {\r\n            if (!err) {\r\n                this.setState({ingredients: result.recordset, selectedIngredient: result.recordset[0].ing_ID});\r\n            } else console.error(err);\r\n        });\r\n        fetching.FetchAPI('localhost:8080', '/Modele/Select/', {token: token}, (err, result) => {\r\n            if (!err) {\r\n                this.setState({models: result.recordset, selectedModel: result.recordset[0].mod_ID});\r\n            } else console.error(err);\r\n        });\r\n    }\r\n\r\n    handleChange(event) {\r\n        this.setState(\r\n            {[event.target.name]: event.target.value}\r\n        );\r\n    }\r\n\r\n    async handleSubmit(event) {\r\n        event.preventDefault();\r\n        let modele = this.state.selectedModel;\r\n        let ingredient = this.state.selectedIngredient;\r\n        let grammage = this.state.grammage;\r\n        let token = localStorage.getItem('token');\r\n        fetching.FetchAPI('localhost:8080', '/IngredientModele/Insert/', {modele: modele, ingredient: ingredient, grammage: grammage, token: token}, (err, result) => {\r\n            if (!err) {\r\n                console.log(result);\r\n                window.location.reload(true);\r\n            } else console.error(err);\r\n        });\r\n        this.setState({selectedModel: '', selectedIngredient: '', grammage: 0});\r\n    }\r\n\r\n    render() {\r\n        if (!this.props.show) {\r\n            return null;\r\n        }\r\n        return (\r\n            <div>\r\n                <div className=\"form-display\">\r\n                    <h1>Ajouter un ingrédient à un modèle</h1>\r\n                    <Form id=\"ingredientForm\" onSubmit={this.handleSubmit}>\r\n                        <FormGroup className=\"mb-3\" controlId=\"selectedModel\">\r\n                            <FormLabel>\r\n                                Modèle\r\n                            </FormLabel>\r\n                            <FormSelect name=\"selectedModel\" value={this.state.selectedModel} onChange={this.handleChange}>\r\n                                {this.state.models.map(model => (\r\n                                    <option value={model.mod_ID} key={model.mod_ID}>\r\n                                        {model.mod_nom}\r\n                                    </option>\r\n                                )\r\n                                )}\r\n                            </FormSelect>\r\n                        </FormGroup>\r\n                        <FormGroup className=\"mb-3\" controlId=\"selectedIngredient\">\r\n                            <FormLabel>\r\n                                Ingredients\r\n                            </FormLabel>\r\n                            <FormSelect name=\"selectedIngredient\" value={this.state.selectedIngredient} onChange={this.handleChange}>\r\n                                {this.state.ingredients.map(ingredient => (\r\n                                    <option value={ingredient.ing_ID} key={ingredient.ing_ID}>\r\n                                        {ingredient.ing_nom}\r\n                                    </option>\r\n                                )\r\n                                )}\r\n                            </FormSelect>\r\n                        </FormGroup>\r\n                        <FormGroup className=\"mb-3\" controlId=\"grammage\">\r\n                            <FormLabel>\r\n                                Grammage\r\n                            </FormLabel>\r\n                            <FormControl pattern=\"[0-9]\" required type=\"number\" placeholder=\"Grammage du freezebee\" name=\"grammage\" value={this.state.grammage} onChange={this.handleChange}>\r\n                            </FormControl>\r\n                        </FormGroup>\r\n                        <Button variant=\"primary\" type=\"submit\">\r\n                            Envoyer\r\n                        </Button>\r\n                    </Form>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default IngredientToModelForm;"]},"metadata":{},"sourceType":"module"}