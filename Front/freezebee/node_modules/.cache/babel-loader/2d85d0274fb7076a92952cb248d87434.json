{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vince\\\\OneDrive\\\\Documents\\\\A5 - Option 1\\\\cybersecurite\\\\freezebee\\\\src\\\\pages\\\\ingredientPage\\\\IngredientForm.js\";\nimport React, { Component } from 'react';\nimport '../../App.css';\nimport { Form, FormControl, FormGroup, FormLabel, Button, Col, Table } from 'react-bootstrap';\nimport IngredientToModelForm from './IngredientToModelForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass IngredientForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.showModal = e => {\n      this.setState({\n        show: !this.state.show\n      });\n    };\n\n    this.state = {\n      name: '',\n      description: '',\n      show: false,\n      ingredients: []\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    fetch(\"data.json\", {\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n      }\n    }).then(res => res.json()).then(result => {\n      console.log(result);\n      this.setState({\n        ingredients: result.ingredients\n      });\n      console.log(this.state);\n    }, error => {\n      this.setState({\n        erreur: error.message\n      });\n    });\n  }\n\n  handleChange(event) {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    console.log(this.state);\n    this.setState({\n      name: '',\n      description: ''\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modelTable\",\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          striped: true,\n          bordered: true,\n          hover: true,\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Nom\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Description\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: this.state.ingredients.map(ingredient => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: ingredient.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: ingredient.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 33\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        className: \"ingredientModelCol\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-display\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Cr\\xE9er un ingr\\xE9dient\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form, {\n            id: \"ingredientForm\",\n            onSubmit: this.handleSubmit,\n            children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n              className: \"mb-3\",\n              controlId: \"name\",\n              children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n                children: \"Nom\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n                required: true,\n                type: \"text\",\n                name: \"name\",\n                placeholder: \"Nom de l'ingr\\xE9dient\",\n                value: this.state.name,\n                onChange: this.handleChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n              className: \"mb-3\",\n              controlId: \"description\",\n              children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n                children: \"Description\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n                required: true,\n                type: \"text\",\n                name: \"description\",\n                placeholder: \"Description de l'ingr\\xE9dient\",\n                value: this.state.description,\n                onChange: this.handleChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"primary\",\n              type: \"submit\",\n              children: \"Envoyer\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          className: \"m-auto mt-4 d-flex\",\n          variant: \"primary\",\n          onClick: e => {\n            this.showModal();\n          },\n          children: \"Ajouter un ingr\\xE9drient \\xE0 un mod\\xE8le\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(IngredientToModelForm, {\n          onClose: this.showModal,\n          show: this.state.show\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default IngredientForm;","map":{"version":3,"sources":["C:/Users/vince/OneDrive/Documents/A5 - Option 1/cybersecurite/freezebee/src/pages/ingredientPage/IngredientForm.js"],"names":["React","Component","Form","FormControl","FormGroup","FormLabel","Button","Col","Table","IngredientToModelForm","IngredientForm","constructor","props","showModal","e","setState","show","state","name","description","ingredients","handleChange","bind","handleSubmit","componentDidMount","fetch","headers","then","res","json","result","console","log","error","erreur","message","event","target","value","preventDefault","render","map","ingredient"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport '../../App.css';\r\nimport { Form, FormControl, FormGroup, FormLabel, Button, Col, Table } from 'react-bootstrap';\r\nimport IngredientToModelForm from './IngredientToModelForm';\r\n\r\nclass IngredientForm extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {name: '', description: '', show: false, ingredients: []};\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch(\"data.json\", {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Accept': 'application/json'\r\n            }\r\n        }\r\n        ).then(res => res.json())\r\n        .then(\r\n            (result) => {\r\n                console.log(result);\r\n                this.setState({\r\n                    ingredients: result.ingredients,\r\n                });\r\n                console.log(this.state)\r\n            },\r\n            (error) => {\r\n                this.setState({\r\n                    erreur: error.message\r\n                });\r\n            }\r\n        )\r\n    }\r\n\r\n    handleChange(event) {\r\n        this.setState(\r\n            {[event.target.name] : event.target.value}\r\n        );\r\n      }\r\n    \r\n    handleSubmit(event) {\r\n        event.preventDefault();\r\n        console.log(this.state);\r\n        this.setState({name: '', description: ''});\r\n    }\r\n\r\n    showModal = e => {\r\n        this.setState({show: !this.state.show});\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"modelTable\">\r\n                    <Table striped bordered hover>\r\n                        <thead>\r\n                            <tr>\r\n                                <th>Nom</th>\r\n                                <th>Description</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {this.state.ingredients.map(ingredient => (\r\n                                <tr>\r\n                                    <td>{ingredient.name}</td>\r\n                                    <td>{ingredient.description}</td>\r\n                                </tr>\r\n                            ))}\r\n                        </tbody>\r\n                    </Table>\r\n                </div>\r\n                <Col className=\"ingredientModelCol\">\r\n                    <div className=\"form-display\">\r\n                        <h1>Créer un ingrédient</h1>\r\n                        <Form id=\"ingredientForm\" onSubmit={this.handleSubmit}>\r\n                        <FormGroup className=\"mb-3\" controlId=\"name\">\r\n                                <FormLabel>\r\n                                    Nom\r\n                                </FormLabel>\r\n                                <FormControl required type=\"text\" name=\"name\" placeholder=\"Nom de l'ingrédient\" value={this.state.name} onChange={this.handleChange}>\r\n                                </FormControl>\r\n                            </FormGroup>\r\n                            <FormGroup className=\"mb-3\" controlId=\"description\">\r\n                                <FormLabel>\r\n                                    Description\r\n                                </FormLabel>\r\n                                <FormControl required type=\"text\" name=\"description\" placeholder=\"Description de l'ingrédient\" value={this.state.description} onChange={this.handleChange}>\r\n                                </FormControl>\r\n                            </FormGroup>\r\n                            <Button variant=\"primary\" type=\"submit\">\r\n                                Envoyer\r\n                            </Button>\r\n                        </Form>\r\n                    </div>\r\n                    <Button className=\"m-auto mt-4 d-flex\" variant=\"primary\" onClick={e => {this.showModal();}}>\r\n                        Ajouter un ingrédrient à un modèle\r\n                    </Button>\r\n                    <IngredientToModelForm onClose={this.showModal} show={this.state.show}>\r\n\r\n                    </IngredientToModelForm>\r\n                </Col>\r\n            </div>\r\n        );\r\n      }\r\n}\r\n\r\nexport default IngredientForm;"]},"metadata":{},"sourceType":"module"}