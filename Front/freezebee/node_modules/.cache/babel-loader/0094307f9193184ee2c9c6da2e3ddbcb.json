{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vince\\\\OneDrive\\\\Documents\\\\A5 - Option 1\\\\cybersecurite\\\\freezebee\\\\src\\\\pages\\\\testPage\\\\TestForm.js\";\nimport React, { Component } from 'react';\nimport '../../App.css';\nimport { Form, FormControl, FormGroup, FormLabel, Button, FormSelect, Table } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst fetching = require('../../encryption/fetching');\n\nclass TestForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: '',\n      description: '',\n      tests: []\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    let token = localStorage.getItem('token');\n    fetching.FetchAPI('localhost:8080', '/Test/Select/', {\n      token: token\n    }, (err, result) => {\n      if (!err) {\n        console.log(result);\n        this.setState({\n          tests: result.recordset\n        });\n      } else console.error(err);\n    });\n  }\n\n  handleChange(event) {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    console.log(this.state);\n    this.setState({\n      name: '',\n      description: ''\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modelTable\",\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          striped: true,\n          bordered: true,\n          hover: true,\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Nom\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 45,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Description\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 46,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Type\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 47,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Proc\\xE9d\\xE9\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 48,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: this.state.tests.map(test => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: test.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 54,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: test.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 55,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: test.type\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: test.process.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 37\n              }, this)]\n            }, test.name, true, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 33\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-display\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Cr\\xE9er un test de validation\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form, {\n          id: \"testForm\",\n          onSubmit: this.handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n            className: \"mb-3\",\n            controlId: \"name\",\n            children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n              children: \"Nom\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n              required: true,\n              type: \"text\",\n              name: \"name\",\n              placeholder: \"Nom du test\",\n              value: this.state.name,\n              onChange: this.handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n            className: \"mb-3\",\n            controlId: \"description\",\n            children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n              children: \"Description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n              required: true,\n              type: \"text\",\n              placeholder: \"Description du test\",\n              name: \"description\",\n              value: this.state.description,\n              onChange: this.handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n            className: \"mb-3\",\n            controlId: \"selectedProcess\",\n            children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n              children: \"Proc\\xE9d\\xE9s\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(FormSelect, {\n              name: \"selectedProcess\",\n              value: this.state.selectedProcess,\n              onChange: this.handleChange,\n              children: this.state.processes.map(process => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: process.name,\n                children: process.name\n              }, process.name, false, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 37\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            type: \"submit\",\n            children: \"Envoyer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default TestForm;","map":{"version":3,"sources":["C:/Users/vince/OneDrive/Documents/A5 - Option 1/cybersecurite/freezebee/src/pages/testPage/TestForm.js"],"names":["React","Component","Form","FormControl","FormGroup","FormLabel","Button","FormSelect","Table","fetching","require","TestForm","constructor","props","state","name","description","tests","handleChange","bind","handleSubmit","componentDidMount","token","localStorage","getItem","FetchAPI","err","result","console","log","setState","recordset","error","event","target","value","preventDefault","render","map","test","type","process","selectedProcess","processes"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport '../../App.css';\r\nimport { Form, FormControl, FormGroup, FormLabel, Button, FormSelect, Table } from 'react-bootstrap';\r\n\r\nconst fetching = require('../../encryption/fetching');\r\n\r\nclass TestForm extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {name: '', description: '', tests: []};\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        let token = localStorage.getItem('token');\r\n        fetching.FetchAPI('localhost:8080', '/Test/Select/', {token: token}, (err, result) => {\r\n            if (!err) {\r\n                console.log(result);\r\n                this.setState({ tests: result.recordset });\r\n            } else console.error(err);\r\n        });\r\n    }\r\n\r\n    handleChange(event) {\r\n        this.setState(\r\n            {[event.target.name] : event.target.value}\r\n        );\r\n      }\r\n    \r\n    handleSubmit(event) {\r\n        event.preventDefault();\r\n        console.log(this.state);\r\n        this.setState({name: '', description: ''});\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"modelTable\">\r\n                    <Table striped bordered hover>\r\n                        <thead>\r\n                            <tr>\r\n                                <th>Nom</th>\r\n                                <th>Description</th>\r\n                                <th>Type</th>\r\n                                <th>Procédé</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {this.state.tests.map(test => (\r\n                                <tr key={test.name}>\r\n                                    <td>{test.name}</td>\r\n                                    <td>{test.description}</td>\r\n                                    <td>{test.type}</td>\r\n                                    <td>{test.process.name}</td>\r\n                                </tr>\r\n                            ))}\r\n                        </tbody>\r\n                    </Table>\r\n                </div>\r\n                <div className=\"form-display\">\r\n                    <h1>Créer un test de validation</h1>\r\n                    <Form id=\"testForm\" onSubmit={this.handleSubmit}>\r\n                    <FormGroup className=\"mb-3\" controlId=\"name\">\r\n                        <FormLabel>\r\n                            Nom\r\n                        </FormLabel>\r\n                        <FormControl required type=\"text\" name=\"name\" placeholder=\"Nom du test\" value={this.state.name} onChange={this.handleChange}>\r\n                        </FormControl>\r\n                    </FormGroup>\r\n                    <FormGroup className=\"mb-3\" controlId=\"description\">\r\n                        <FormLabel>\r\n                            Description\r\n                        </FormLabel>\r\n                        <FormControl required type=\"text\" placeholder=\"Description du test\" name=\"description\" value={this.state.description} onChange={this.handleChange}>\r\n                        </FormControl>\r\n                    </FormGroup>\r\n                    <FormGroup className=\"mb-3\" controlId=\"selectedProcess\">\r\n                        <FormLabel>\r\n                            Procédés\r\n                        </FormLabel>\r\n                        <FormSelect name=\"selectedProcess\" value={this.state.selectedProcess} onChange={this.handleChange}>\r\n                            {this.state.processes.map(process => (\r\n                                    <option value={process.name} key={process.name}>\r\n                                        {process.name}\r\n                                    </option>\r\n                                )\r\n                            )}\r\n                        </FormSelect>\r\n                    </FormGroup>\r\n                        <Button variant=\"primary\" type=\"submit\">\r\n                            Envoyer\r\n                        </Button>\r\n                    </Form>\r\n                </div>\r\n            </div>\r\n        );\r\n      }\r\n}\r\n\r\nexport default TestForm;"]},"metadata":{},"sourceType":"module"}