{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vince\\\\OneDrive\\\\Documents\\\\A5 - Option 1\\\\cybersecurite\\\\freezebee\\\\src\\\\pages\\\\stepPage\\\\StepToProcede.js\";\nimport React, { Component } from 'react';\nimport '../../App.css';\nimport { Button, FormLabel, FormControl, Form, FormGroup, FormSelect, Modal } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst fetching = require('../../encryption/fetching');\n\nclass StepToProcedeForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onClose = e => {\n      this.props.onClose && this.props.onClose(e);\n    };\n\n    this.state = {\n      processes: [],\n      selectedProcess: '',\n      steps: [],\n      selectedStep: '',\n      order: 0\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    let token = localStorage.getItem('token');\n    fetching.FetchAPI('localhost:8080', '/Procede/Select/', {\n      token: token\n    }, (err, result) => {\n      if (!err) {\n        this.setState({\n          processes: result.recordset,\n          selectedProcess: result.recordset[0].pro_ID\n        });\n      } else console.error(err);\n    });\n    fetching.FetchAPI('localhost:8080', '/Etape/Select/', {\n      token: token\n    }, (err, result) => {\n      if (!err) {\n        this.setState({\n          steps: result.recordset,\n          selectedStep: result.recordset[0].eta_ID\n        });\n      } else console.error(err);\n    });\n  }\n\n  handleChange(event) {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  }\n\n  async handleSubmit(event) {\n    event.preventDefault();\n    let procede = this.state.selectedProcess;\n    let etape = this.state.selectedStep;\n    let ordre = this.state.order;\n    let token = localStorage.getItem('token');\n    fetching.FetchAPI('localhost:8080', '/EtapeProcede/Insert/', {\n      procede: procede,\n      etape: etape,\n      ordre: ordre,\n      token: token\n    }, (err, result) => {\n      if (!err) {\n        console.log(result);\n        window.location.reload(true);\n      } else console.error(err);\n    });\n    this.setState({\n      selectedProcess: '',\n      selectedStep: '',\n      ordre: 0\n    });\n  }\n\n  render() {\n    if (!this.props.show) {\n      return null;\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-display\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Ajouter une \\xE9tape \\xE0 un proc\\xE9d\\xE9\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form, {\n          id: \"steptoprocessForm\",\n          onSubmit: this.handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n            className: \"mb-3\",\n            controlId: \"selectedProcess\",\n            children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n              children: \"Proc\\xE9d\\xE9\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(FormSelect, {\n              name: \"selectedProcess\",\n              value: this.state.selectedProcess,\n              onChange: this.handleChange,\n              children: this.state.processes.map(process => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: process.pro_ID,\n                children: process.pro_nom\n              }, process.pro_ID, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 37\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n            className: \"mb-3\",\n            controlId: \"selectedStep\",\n            children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n              children: \"\\xC9tape\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(FormSelect, {\n              name: \"selectedStep\",\n              value: this.state.selectedStep,\n              onChange: this.handleChange,\n              children: this.state.steps.map(step => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: step.eta_ID,\n                children: step.eta_nom\n              }, step.eta_ID, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 37\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n            className: \"mb-3\",\n            controlId: \"order\",\n            children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n              children: \"Ordre\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n              pattern: \"[0-9]\",\n              required: true,\n              type: \"number\",\n              placeholder: \"Ordre de l'\\xE9tape\",\n              name: \"order\",\n              value: this.state.order,\n              onChange: this.handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            type: \"submit\",\n            children: \"Envoyer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default StepToProcedeForm;","map":{"version":3,"sources":["C:/Users/vince/OneDrive/Documents/A5 - Option 1/cybersecurite/freezebee/src/pages/stepPage/StepToProcede.js"],"names":["React","Component","Button","FormLabel","FormControl","Form","FormGroup","FormSelect","Modal","fetching","require","StepToProcedeForm","constructor","props","onClose","e","state","processes","selectedProcess","steps","selectedStep","order","handleChange","bind","handleSubmit","componentDidMount","token","localStorage","getItem","FetchAPI","err","result","setState","recordset","pro_ID","console","error","eta_ID","event","target","name","value","preventDefault","procede","etape","ordre","log","window","location","reload","render","show","map","process","pro_nom","step","eta_nom"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport '../../App.css';\r\nimport {Button, FormLabel, FormControl, Form, FormGroup, FormSelect, Modal} from 'react-bootstrap';\r\n\r\nconst fetching = require('../../encryption/fetching');\r\n\r\nclass StepToProcedeForm extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {processes: [], selectedProcess: '', steps: [], selectedStep: '', order: 0};\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    onClose = e => {\r\n        this.props.onClose && this.props.onClose(e);\r\n    };\r\n\r\n    componentDidMount() {\r\n        let token = localStorage.getItem('token');\r\n        fetching.FetchAPI('localhost:8080', '/Procede/Select/', {token: token}, (err, result) => {\r\n            if (!err) {\r\n                this.setState({processes: result.recordset, selectedProcess: result.recordset[0].pro_ID});\r\n            } else console.error(err);\r\n        });\r\n        fetching.FetchAPI('localhost:8080', '/Etape/Select/', {token: token}, (err, result) => {\r\n            if (!err) {\r\n                this.setState({steps: result.recordset, selectedStep: result.recordset[0].eta_ID});\r\n            } else console.error(err);\r\n        });\r\n    }\r\n\r\n    handleChange(event) {\r\n        this.setState(\r\n            {[event.target.name]: event.target.value}\r\n        );\r\n    }\r\n\r\n    async handleSubmit(event) {\r\n        event.preventDefault();\r\n        let procede = this.state.selectedProcess;\r\n        let etape = this.state.selectedStep;\r\n        let ordre = this.state.order;\r\n        let token = localStorage.getItem('token');\r\n        fetching.FetchAPI('localhost:8080', '/EtapeProcede/Insert/', {procede: procede, etape: etape, ordre: ordre, token: token}, (err, result) => {\r\n            if (!err) {\r\n                console.log(result);\r\n                window.location.reload(true);\r\n            } else console.error(err);\r\n        });\r\n        this.setState({selectedProcess: '', selectedStep: '', ordre: 0});\r\n    }\r\n\r\n\r\n    render() {\r\n        if (!this.props.show) {\r\n            return null;\r\n        }\r\n        return (\r\n            <div>\r\n                <div className=\"form-display\">\r\n                    <h1>Ajouter une étape à un procédé</h1>\r\n                    <Form id=\"steptoprocessForm\" onSubmit={this.handleSubmit}>\r\n                        <FormGroup className=\"mb-3\" controlId=\"selectedProcess\">\r\n                            <FormLabel>\r\n                                Procédé\r\n                            </FormLabel>\r\n                            <FormSelect name=\"selectedProcess\" value={this.state.selectedProcess} onChange={this.handleChange}>\r\n                                {this.state.processes.map(process => (\r\n                                    <option value={process.pro_ID} key={process.pro_ID}>\r\n                                        {process.pro_nom}\r\n                                    </option>\r\n                                )\r\n                                )}\r\n                            </FormSelect>\r\n                        </FormGroup>\r\n                        <FormGroup className=\"mb-3\" controlId=\"selectedStep\">\r\n                            <FormLabel>\r\n                                Étape\r\n                            </FormLabel>\r\n                            <FormSelect name=\"selectedStep\" value={this.state.selectedStep} onChange={this.handleChange}>\r\n                                {this.state.steps.map(step => (\r\n                                    <option value={step.eta_ID} key={step.eta_ID}>\r\n                                        {step.eta_nom}\r\n                                    </option>\r\n                                )\r\n                                )}\r\n                            </FormSelect>\r\n                        </FormGroup>\r\n                        <FormGroup className=\"mb-3\" controlId=\"order\">\r\n                            <FormLabel>\r\n                                Ordre\r\n                            </FormLabel>\r\n                            <FormControl pattern=\"[0-9]\" required type=\"number\" placeholder=\"Ordre de l'étape\" name=\"order\" value={this.state.order} onChange={this.handleChange}>\r\n                            </FormControl>\r\n                        </FormGroup>\r\n                        <Button variant=\"primary\" type=\"submit\">\r\n                            Envoyer\r\n                        </Button>\r\n                    </Form>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n\r\n}\r\n\r\nexport default StepToProcedeForm;"]},"metadata":{},"sourceType":"module"}