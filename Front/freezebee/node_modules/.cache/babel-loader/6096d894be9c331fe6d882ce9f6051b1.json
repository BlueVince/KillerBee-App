{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vince\\\\OneDrive\\\\Documents\\\\A5 - Option 1\\\\cybersecurite\\\\freezebee\\\\src\\\\pages\\\\procedePage\\\\ProcedeForm.js\";\nimport React, { Component } from 'react';\nimport '../../App.css';\nimport { Form, FormControl, FormGroup, FormLabel, Button, FormSelect, Table } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst fetching = require('../../encryption/fetching');\n\nclass ProcedeForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: '',\n      description: '',\n      models: [],\n      selectedModel: '',\n      processes: []\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    let token = localStorage.getItem('token');\n    fetching.FetchAPI('localhost:8080', '/Procede/Select/', {\n      token: token\n    }, (err, result) => {\n      if (!err) {\n        console.log(result);\n        this.setState({\n          processes: result.recordset\n        });\n      } else console.error(err);\n    });\n    fetching.FetchAPI('localhost:8080', '/Modele/Select/', {\n      token: token\n    }, (err, result) => {\n      if (!err) {\n        console.log(result);\n        this.setState({\n          models: result.recordset,\n          selectedModel: result.recordset[0]\n        });\n      } else console.error(err);\n    });\n  }\n\n  handleChange(event) {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  }\n\n  async handleSubmit(event) {\n    event.preventDefault();\n    let name = this.state.name;\n    let description = this.state.description;\n    let modele = this.state.selectedModel.mod_ID;\n    let token = localStorage.getItem('token');\n    console.log(token);\n    fetching.FetchAPI('localhost:8080', '/Procede/Insert/', {\n      nom: name,\n      description: description,\n      modele: modele,\n      token: token\n    }, (err, result) => {\n      if (!err) {\n        console.log(result);\n        window.location.reload(true);\n      } else console.error(err);\n    });\n    this.setState({\n      name: '',\n      description: '',\n      selectedModel: ''\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modelTable\",\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          striped: true,\n          bordered: true,\n          hover: true,\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Nom\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Description\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Mod\\xE8le\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: this.state.processes.map(process => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: process.pro_nom\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: process.pro_description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: process.mod_nom\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 37\n              }, this)]\n            }, process.pro_ID, true, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 33\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-display\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Ajouter un proc\\xE9d\\xE9\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form, {\n          id: \"fabricationForm\",\n          onSubmit: this.handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n            className: \"mb-3\",\n            controlId: \"name\",\n            children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n              children: \"Nom\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n              required: true,\n              type: \"text\",\n              name: \"name\",\n              placeholder: \"Nom du proc\\xE9d\\xE9\",\n              value: this.state.name,\n              onChange: this.handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n            className: \"mb-3\",\n            controlId: \"description\",\n            children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n              children: \"Description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n              required: true,\n              type: \"text\",\n              placeholder: \"Description du proc\\xE9d\\xE9\",\n              name: \"description\",\n              value: this.state.description,\n              onChange: this.handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n            className: \"mb-3\",\n            controlId: \"selectedModel\",\n            children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n              children: \"Mod\\xE8le\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(FormSelect, {\n              name: \"selectedModel\",\n              value: this.state.selectedModel,\n              onChange: this.handleChange,\n              children: this.state.models.map(model => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: model.mod_nom,\n                children: model.mod_nom\n              }, model.mod_ID, false, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 41\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            type: \"submit\",\n            children: \"Envoyer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default ProcedeForm;","map":{"version":3,"sources":["C:/Users/vince/OneDrive/Documents/A5 - Option 1/cybersecurite/freezebee/src/pages/procedePage/ProcedeForm.js"],"names":["React","Component","Form","FormControl","FormGroup","FormLabel","Button","FormSelect","Table","fetching","require","ProcedeForm","constructor","props","state","name","description","models","selectedModel","processes","handleChange","bind","handleSubmit","componentDidMount","token","localStorage","getItem","FetchAPI","err","result","console","log","setState","recordset","error","event","target","value","preventDefault","modele","mod_ID","nom","window","location","reload","render","map","process","pro_nom","pro_description","mod_nom","pro_ID","model"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport '../../App.css';\r\nimport { Form, FormControl, FormGroup, FormLabel, Button, FormSelect, Table } from 'react-bootstrap';\r\nconst fetching = require('../../encryption/fetching');\r\nclass ProcedeForm extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {name: '', description: '', models: [], selectedModel: '', processes: []};\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        let token = localStorage.getItem('token');\r\n        fetching.FetchAPI('localhost:8080', '/Procede/Select/', {token: token}, (err, result) => {\r\n            if (!err) {\r\n                console.log(result);\r\n                this.setState({ processes: result.recordset });\r\n            } else console.error(err);\r\n        });\r\n        fetching.FetchAPI('localhost:8080', '/Modele/Select/', {token: token}, (err, result) => {\r\n            if (!err) {\r\n                console.log(result);\r\n                this.setState({ models: result.recordset, selectedModel: result.recordset[0] });\r\n            } else console.error(err);\r\n        });\r\n    }\r\n\r\n    handleChange(event) {\r\n        this.setState(\r\n            {[event.target.name] : event.target.value}\r\n        );\r\n      }\r\n\r\n    async handleSubmit(event) {\r\n        event.preventDefault();\r\n        let name = this.state.name;\r\n        let description = this.state.description;\r\n        let modele = this.state.selectedModel.mod_ID;\r\n        let token = localStorage.getItem('token');\r\n        console.log(token);\r\n        fetching.FetchAPI('localhost:8080', '/Procede/Insert/', {nom: name, description: description, modele: modele, token: token}, (err, result) => {\r\n            if (!err) {\r\n                console.log(result);\r\n                window.location.reload(true);\r\n            } else console.error(err);\r\n        });\r\n        this.setState({name: '', description: '', selectedModel: ''});\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"modelTable\">\r\n                    <Table striped bordered hover>\r\n                        <thead>\r\n                            <tr>\r\n                                <th>Nom</th>\r\n                                <th>Description</th>\r\n                                <th>Modèle</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {this.state.processes.map(process => (\r\n                                <tr key={process.pro_ID}>\r\n                                    <td>{process.pro_nom}</td>\r\n                                    <td>{process.pro_description}</td>\r\n                                    <td>{process.mod_nom}</td>\r\n                                </tr>\r\n                            ))}\r\n                        </tbody>\r\n                    </Table>\r\n                </div>\r\n                <div className=\"form-display\">\r\n                    <h1>Ajouter un procédé</h1>\r\n                    <Form id=\"fabricationForm\" onSubmit={this.handleSubmit}>\r\n                        <FormGroup className=\"mb-3\" controlId=\"name\">\r\n                            <FormLabel>\r\n                                Nom\r\n                            </FormLabel>\r\n                            <FormControl required type=\"text\" name=\"name\" placeholder=\"Nom du procédé\" value={this.state.name} onChange={this.handleChange}>\r\n                            </FormControl>\r\n                        </FormGroup>\r\n                        <FormGroup className=\"mb-3\" controlId=\"description\">\r\n                            <FormLabel>\r\n                                Description\r\n                            </FormLabel>\r\n                            <FormControl required type=\"text\" placeholder=\"Description du procédé\" name=\"description\" value={this.state.description} onChange={this.handleChange}>\r\n                            </FormControl>\r\n                        </FormGroup>\r\n\r\n                        <FormGroup className=\"mb-3\" controlId=\"selectedModel\">\r\n                            <FormLabel>\r\n                                Modèle\r\n                            </FormLabel>\r\n                            <FormSelect name=\"selectedModel\" value={this.state.selectedModel} onChange={this.handleChange}>\r\n                                {this.state.models.map(model => (\r\n                                        <option value={model.mod_nom} key={model.mod_ID}>\r\n                                            {model.mod_nom}\r\n                                        </option>\r\n                                    )\r\n                                )}\r\n                            </FormSelect>\r\n                        </FormGroup>\r\n                        <Button variant=\"primary\" type=\"submit\">\r\n                            Envoyer\r\n                        </Button>\r\n                    </Form>\r\n                </div>\r\n            </div>\r\n        );\r\n      }\r\n}\r\n\r\nexport default ProcedeForm;"]},"metadata":{},"sourceType":"module"}