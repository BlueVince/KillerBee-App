{"ast":null,"code":"var _jsxFileName = \"C:\\\\dev\\\\cybersecurite\\\\freezebee\\\\src\\\\pages\\\\ingredientPage\\\\IngredientToModelForm.js\";\nimport React, { Component } from 'react';\nimport '../../App.css';\nimport { Button, FormLabel, FormControl, Form, FormGroup, FormSelect } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass IngredientToModelForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      models: [],\n      selectedModel: '',\n      ingredients: [],\n      selectedIngredient: '',\n      grammage: ''\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    fetch(\"data.json\", {\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n      }\n    }).then(res => res.json()).then(result => {\n      console.log(result);\n      this.setState({\n        models: result.models,\n        selectedModel: result.models[0],\n        ingredients: result.ingredients,\n        selectedIngredient: result.ingredients[0]\n      });\n      console.log(this.state);\n    }, error => {\n      this.setState({\n        erreur: error.message\n      });\n    });\n  }\n\n  handleChange(event) {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    console.log(this.state);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-display\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Cr\\xE9er un ingr\\xE9dient\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        id: \"ingredientForm\",\n        onSubmit: this.handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n          className: \"mb-3\",\n          controlId: \"selectedModel\",\n          children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n            children: \"Mod\\xE8le\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(FormSelect, {\n            name: \"selectedModel\",\n            value: this.state.selectedModel,\n            onChange: this.handleChange,\n            children: this.state.models.map(model => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: model.nom,\n              children: model.nom\n            }, model.nom, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 37\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n          className: \"mb-3\",\n          controlId: \"selectedIngredient\",\n          children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n            children: \"Ingredients\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(FormSelect, {\n            name: \"selectedIngredient\",\n            value: this.state.selectedIngredient,\n            onChange: this.handleChange,\n            children: this.state.ingredients.map(ingredient => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: ingredient.nom,\n              children: ingredient.nom\n            }, ingredient.nom, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 37\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n          className: \"mb-3\",\n          controlId: \"grammage\",\n          children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n            children: \"Grammage\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n            pattern: \"[0-9]\",\n            required: true,\n            type: \"number\",\n            placeholder: \"Grammage du freezebee\",\n            name: \"grammage\",\n            value: this.state.grammage,\n            onChange: this.handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          type: \"submit\",\n          children: \"Envoyer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default IngredientToModelForm;","map":{"version":3,"sources":["C:/dev/cybersecurite/freezebee/src/pages/ingredientPage/IngredientToModelForm.js"],"names":["React","Component","Button","FormLabel","FormControl","Form","FormGroup","FormSelect","IngredientToModelForm","constructor","props","state","models","selectedModel","ingredients","selectedIngredient","grammage","handleChange","bind","handleSubmit","componentDidMount","fetch","headers","then","res","json","result","console","log","setState","error","erreur","message","event","target","name","value","preventDefault","render","map","model","nom","ingredient"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport '../../App.css';\r\nimport { Button, FormLabel, FormControl, Form, FormGroup, FormSelect } from 'react-bootstrap';\r\n\r\nclass IngredientToModelForm extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {models: [], selectedModel: '', ingredients: [], selectedIngredient: '', grammage: ''};\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch(\"data.json\", {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Accept': 'application/json'\r\n            }\r\n        }\r\n        ).then(res => res.json())\r\n        .then(\r\n            (result) => {\r\n                console.log(result);\r\n                this.setState({\r\n                    models: result.models,\r\n                    selectedModel: result.models[0],\r\n                    ingredients: result.ingredients,\r\n                    selectedIngredient: result.ingredients[0]\r\n                });\r\n                console.log(this.state)\r\n            },\r\n            (error) => {\r\n                this.setState({\r\n                    erreur: error.message\r\n                });\r\n            }\r\n        )\r\n    }\r\n\r\n    handleChange(event) {\r\n        this.setState(\r\n            {[event.target.name] : event.target.value}\r\n        );\r\n      }\r\n    \r\n    handleSubmit(event) {\r\n        event.preventDefault();\r\n        console.log(this.state);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"form-display\">\r\n                <h1>Créer un ingrédient</h1>\r\n                <Form id=\"ingredientForm\" onSubmit={this.handleSubmit}>\r\n                    <FormGroup className=\"mb-3\" controlId=\"selectedModel\">\r\n                        <FormLabel>\r\n                            Modèle\r\n                        </FormLabel>\r\n                        <FormSelect name=\"selectedModel\" value={this.state.selectedModel} onChange={this.handleChange}>\r\n                            {this.state.models.map(model => (\r\n                                    <option value={model.nom} key={model.nom}>\r\n                                        {model.nom}\r\n                                    </option>\r\n                                )\r\n                            )}\r\n                        </FormSelect>\r\n                    </FormGroup>\r\n                    <FormGroup className=\"mb-3\" controlId=\"selectedIngredient\">\r\n                        <FormLabel>\r\n                            Ingredients\r\n                        </FormLabel>\r\n                        <FormSelect name=\"selectedIngredient\" value={this.state.selectedIngredient} onChange={this.handleChange}>\r\n                            {this.state.ingredients.map(ingredient => (\r\n                                    <option value={ingredient.nom} key={ingredient.nom}>\r\n                                        {ingredient.nom}\r\n                                    </option>\r\n                                )\r\n                            )}\r\n                        </FormSelect>\r\n                    </FormGroup>\r\n                    <FormGroup className=\"mb-3\" controlId=\"grammage\">\r\n                        <FormLabel>\r\n                            Grammage\r\n                        </FormLabel>\r\n                        <FormControl pattern=\"[0-9]\" required type=\"number\" placeholder=\"Grammage du freezebee\" name=\"grammage\" value={this.state.grammage} onChange={this.handleChange}>\r\n                        </FormControl>\r\n                    </FormGroup>\r\n                    <Button variant=\"primary\" type=\"submit\">\r\n                        Envoyer\r\n                    </Button>\r\n                </Form>\r\n            </div>\r\n        );\r\n      }\r\n}\r\n\r\nexport default IngredientToModelForm;"]},"metadata":{},"sourceType":"module"}