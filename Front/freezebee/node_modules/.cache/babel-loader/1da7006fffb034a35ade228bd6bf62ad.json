{"ast":null,"code":"var _jsxFileName = \"C:\\\\dev\\\\cybersecurite\\\\freezebee\\\\src\\\\components\\\\freezebee.js\";\nimport React, { Component } from 'react';\nimport { FormLabel, Form, FormControl, FormGroup, Button, FormSelect } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass FreezeBee extends Component {\n  // constructor(props) {\n  //     super(props);\n  //     this.state = {erreur: null, name: '', description: '', pUHT: '', gamme: '', ingredients: [], grammage: ''};\n  //     this.handleChange = this.handleChange.bind(this);\n  //     this.handleSubmit = this.handleSubmit.bind(this);\n  // }\n  // componentDidMount() {\n  //     fetch(\"data.json\", {\n  //         headers: {\n  //             'Content-Type': 'application/json',\n  //             'Accept': 'application/json'\n  //         }\n  //     }\n  //     ).then(res => res.json())\n  //     .then(\n  //         (result) => {\n  //             console.log(result);\n  //             this.setState({\n  //                 ingredients: result.ingredients\n  //             });\n  //         },\n  //         (error) => {\n  //             this.setState({\n  //                 erreur: error.message\n  //             });\n  //         }\n  //     )\n  // }\n  // handleChange(event) {\n  //     this.setState(\n  //         {[event.target.name] : event.target.value}\n  //     );\n  // }\n  // handleSubmit(event) {\n  //     const {name, description, pUHT, gamme, ingredients, grammage, erreur} = this.state;\n  //     event.preventDefault();\n  //     console.log(this.state);\n  //     event.target.reset();\n  //     // this.state = {name: '', description: '', pUHT: '', gamme: '', ingredients: '', grammage: ''};\n  // }\n  // render() {\n  //         if (this.state.erreur) {\n  //             return <div>Erreur : {this.state.erreur}</div>\n  //         } else {\n  //             return(\n  //                 <div className=\"w-50 m-auto\">\n  //                 <h1>Ajouter un modèle</h1>\n  //                 <Form id=\"freezebeeForm\" onSubmit={this.handleSubmit}>\n  //                     <FormGroup className=\"mb-3\" controlId=\"name\">\n  //                         <FormLabel>\n  //                             Nom\n  //                         </FormLabel>\n  //                         <FormControl required type=\"text\" placeholder=\"Nom du freezebee\" name=\"name\" value={this.state.name} onChange={this.handleChange}>\n  //                         </FormControl>\n  //                     </FormGroup>\n  //                     <FormGroup className=\"mb-3\" controlId=\"description\">\n  //                         <FormLabel>\n  //                             Description\n  //                         </FormLabel>\n  //                         <FormControl required type=\"text\" placeholder=\"Description du freezebee\" name=\"description\" value={this.state.description} onChange={this.handleChange}>\n  //                         </FormControl>\n  //                     </FormGroup>\n  //                     <FormGroup className=\"mb-3\" controlId=\"pUHT\">\n  //                         <FormLabel>\n  //                             pUHT\n  //                         </FormLabel>\n  //                         <FormControl required type=\"number\" placeholder=\"Prix du freezebee\" name=\"pUHT\" value={this.state.pUHT} onChange={this.handleChange}>\n  //                         </FormControl>\n  //                     </FormGroup>\n  //                     <FormGroup className=\"mb-3\" controlId=\"gamme\">\n  //                         <FormLabel>\n  //                             Gamme\n  //                         </FormLabel>\n  //                         <FormControl required type=\"text\" placeholder=\"Gamme du freezebee\" name=\"gamme\" value={this.state.gamme} onChange={this.handleChange}>\n  //                         </FormControl>\n  //                     </FormGroup>\n  //                     <FormGroup className=\"mb-3\" controlId=\"ingredients\">\n  //                         <FormLabel>\n  //                             Ingredients\n  //                         </FormLabel>\n  //                         <FormSelect name=\"ingredients\" value={this.state.ingredients} onChange={this.handleChange}>\n  //                             {this.state.ingredients.map(ingredient => (\n  //                                 <option value={ingredient.nom} key={ingredient.nom}>\n  //                                     {ingredient.nom}\n  //                                 </option>\n  //                             ))}\n  //                         </FormSelect>\n  //                     </FormGroup>\n  //                     {/* <FormGroup className=\"mb-3\" controlId=\"ingredients\">\n  //                         <FormLabel>\n  //                             Ingredients\n  //                         </FormLabel>\n  //                         <FormControl required type=\"text\" placeholder=\"Ingredients du freezebee\" name=\"ingredients\" value={this.state.ingredients} onChange={this.handleChange}>\n  //                         </FormControl>\n  //                     </FormGroup> */}\n  //                     <FormGroup className=\"mb-3\" controlId=\"grammage\">\n  //                         <FormLabel>\n  //                             Grammage\n  //                         </FormLabel>\n  //                         <FormControl required type=\"number\" placeholder=\"Grammage du freezebee\" name=\"grammage\" value={this.state.grammage} onChange={this.handleChange}>\n  //                         </FormControl>\n  //                     </FormGroup>\n  //                     <Button variant=\"primary\" type=\"submit\">\n  //                         Envoyer\n  //                     </Button>\n  //                 </Form>\n  //             </div>\n  //             )\n  //         }\n  //   }\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      isLoaded: false,\n      items: []\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"https://api.example.com/items\").then(res => res.json()).then(result => {\n      this.setState({\n        isLoaded: true,\n        items: result.items\n      });\n    }, // Remarque : il est important de traiter les erreurs ici\n    // au lieu d'utiliser un bloc catch(), pour ne pas passer à la trappe\n    // des exceptions provenant de réels bugs du composant.\n    error => {\n      this.setState({\n        isLoaded: true,\n        error\n      });\n    });\n  }\n\n  render() {\n    const {\n      error,\n      isLoaded,\n      items\n    } = this.state;\n\n    if (error) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Erreur : \", error.message]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 18\n      }, this);\n    } else if (!isLoaded) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Chargement\\u2026\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 18\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: items.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [item.name, \" \", item.price]\n        }, item.name, true, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 13\n      }, this);\n    }\n  }\n\n}\n\nexport default FreezeBee;","map":{"version":3,"sources":["C:/dev/cybersecurite/freezebee/src/components/freezebee.js"],"names":["React","Component","FormLabel","Form","FormControl","FormGroup","Button","FormSelect","FreezeBee","constructor","props","state","error","isLoaded","items","componentDidMount","fetch","then","res","json","result","setState","render","message","map","item","name","price"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,SAAR,EAAmBC,IAAnB,EAAyBC,WAAzB,EAAsCC,SAAtC,EAAiDC,MAAjD,EAAyDC,UAAzD,QAA2E,iBAA3E;;;AAEA,MAAMC,SAAN,SAAwBP,SAAxB,CAAkf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE,IADI;AAEXC,MAAAA,QAAQ,EAAE,KAFC;AAGXC,MAAAA,KAAK,EAAE;AAHI,KAAb;AAKD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClBC,IAAAA,KAAK,CAAC,+BAAD,CAAL,CACGC,IADH,CACQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADf,EAEGF,IAFH,CAGKG,MAAD,IAAY;AACV,WAAKC,QAAL,CAAc;AACZR,QAAAA,QAAQ,EAAE,IADE;AAEZC,QAAAA,KAAK,EAAEM,MAAM,CAACN;AAFF,OAAd;AAID,KARL,EASI;AACA;AACA;AACCF,IAAAA,KAAD,IAAW;AACT,WAAKS,QAAL,CAAc;AACZR,QAAAA,QAAQ,EAAE,IADE;AAEZD,QAAAA;AAFY,OAAd;AAID,KAjBL;AAmBD;;AAEDU,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEV,MAAAA,KAAF;AAASC,MAAAA,QAAT;AAAmBC,MAAAA;AAAnB,QAA6B,KAAKH,KAAxC;;AACA,QAAIC,KAAJ,EAAW;AACT,0BAAO;AAAA,gCAAeA,KAAK,CAACW,OAArB;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AACD,KAFD,MAEO,IAAI,CAACV,QAAL,EAAe;AACpB,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AACD,KAFM,MAEA;AACL,0BACE;AAAA,kBACGC,KAAK,CAACU,GAAN,CAAUC,IAAI,iBACb;AAAA,qBACGA,IAAI,CAACC,IADR,OACeD,IAAI,CAACE,KADpB;AAAA,WAASF,IAAI,CAACC,IAAd;AAAA;AAAA;AAAA;AAAA,gBADD;AADH;AAAA;AAAA;AAAA;AAAA,cADF;AASD;AACF;;AAtK2B;;AAyKlC,eAAelB,SAAf","sourcesContent":["import React, {Component} from 'react';\r\nimport {FormLabel, Form, FormControl, FormGroup, Button, FormSelect } from 'react-bootstrap';\r\n\r\nclass FreezeBee extends Component {\r\n    // constructor(props) {\r\n    //     super(props);\r\n    //     this.state = {erreur: null, name: '', description: '', pUHT: '', gamme: '', ingredients: [], grammage: ''};\r\n\r\n    //     this.handleChange = this.handleChange.bind(this);\r\n    //     this.handleSubmit = this.handleSubmit.bind(this);\r\n    // }\r\n\r\n    // componentDidMount() {\r\n    //     fetch(\"data.json\", {\r\n    //         headers: {\r\n    //             'Content-Type': 'application/json',\r\n    //             'Accept': 'application/json'\r\n    //         }\r\n    //     }\r\n    //     ).then(res => res.json())\r\n    //     .then(\r\n    //         (result) => {\r\n    //             console.log(result);\r\n    //             this.setState({\r\n    //                 ingredients: result.ingredients\r\n    //             });\r\n    //         },\r\n    //         (error) => {\r\n    //             this.setState({\r\n    //                 erreur: error.message\r\n    //             });\r\n    //         }\r\n    //     )\r\n    // }\r\n\r\n    // handleChange(event) {\r\n    //     this.setState(\r\n    //         {[event.target.name] : event.target.value}\r\n    //     );\r\n    // }\r\n    \r\n    // handleSubmit(event) {\r\n    //     const {name, description, pUHT, gamme, ingredients, grammage, erreur} = this.state;\r\n    //     event.preventDefault();\r\n    //     console.log(this.state);\r\n    //     event.target.reset();\r\n    //     // this.state = {name: '', description: '', pUHT: '', gamme: '', ingredients: '', grammage: ''};\r\n    // }\r\n\r\n    // render() {\r\n    //         if (this.state.erreur) {\r\n    //             return <div>Erreur : {this.state.erreur}</div>\r\n    //         } else {\r\n    //             return(\r\n    //                 <div className=\"w-50 m-auto\">\r\n    //                 <h1>Ajouter un modèle</h1>\r\n    //                 <Form id=\"freezebeeForm\" onSubmit={this.handleSubmit}>\r\n    //                     <FormGroup className=\"mb-3\" controlId=\"name\">\r\n    //                         <FormLabel>\r\n    //                             Nom\r\n    //                         </FormLabel>\r\n    //                         <FormControl required type=\"text\" placeholder=\"Nom du freezebee\" name=\"name\" value={this.state.name} onChange={this.handleChange}>\r\n    //                         </FormControl>\r\n    //                     </FormGroup>\r\n    //                     <FormGroup className=\"mb-3\" controlId=\"description\">\r\n    //                         <FormLabel>\r\n    //                             Description\r\n    //                         </FormLabel>\r\n    //                         <FormControl required type=\"text\" placeholder=\"Description du freezebee\" name=\"description\" value={this.state.description} onChange={this.handleChange}>\r\n    //                         </FormControl>\r\n    //                     </FormGroup>\r\n    //                     <FormGroup className=\"mb-3\" controlId=\"pUHT\">\r\n    //                         <FormLabel>\r\n    //                             pUHT\r\n    //                         </FormLabel>\r\n    //                         <FormControl required type=\"number\" placeholder=\"Prix du freezebee\" name=\"pUHT\" value={this.state.pUHT} onChange={this.handleChange}>\r\n    //                         </FormControl>\r\n    //                     </FormGroup>\r\n    //                     <FormGroup className=\"mb-3\" controlId=\"gamme\">\r\n    //                         <FormLabel>\r\n    //                             Gamme\r\n    //                         </FormLabel>\r\n    //                         <FormControl required type=\"text\" placeholder=\"Gamme du freezebee\" name=\"gamme\" value={this.state.gamme} onChange={this.handleChange}>\r\n    //                         </FormControl>\r\n    //                     </FormGroup>\r\n    \r\n    //                     <FormGroup className=\"mb-3\" controlId=\"ingredients\">\r\n    //                         <FormLabel>\r\n    //                             Ingredients\r\n    //                         </FormLabel>\r\n    //                         <FormSelect name=\"ingredients\" value={this.state.ingredients} onChange={this.handleChange}>\r\n    //                             {this.state.ingredients.map(ingredient => (\r\n    //                                 <option value={ingredient.nom} key={ingredient.nom}>\r\n    //                                     {ingredient.nom}\r\n    //                                 </option>\r\n    //                             ))}\r\n    //                         </FormSelect>\r\n    //                     </FormGroup>\r\n    //                     {/* <FormGroup className=\"mb-3\" controlId=\"ingredients\">\r\n    //                         <FormLabel>\r\n    //                             Ingredients\r\n    //                         </FormLabel>\r\n    //                         <FormControl required type=\"text\" placeholder=\"Ingredients du freezebee\" name=\"ingredients\" value={this.state.ingredients} onChange={this.handleChange}>\r\n    //                         </FormControl>\r\n    //                     </FormGroup> */}\r\n    //                     <FormGroup className=\"mb-3\" controlId=\"grammage\">\r\n    //                         <FormLabel>\r\n    //                             Grammage\r\n    //                         </FormLabel>\r\n    //                         <FormControl required type=\"number\" placeholder=\"Grammage du freezebee\" name=\"grammage\" value={this.state.grammage} onChange={this.handleChange}>\r\n    //                         </FormControl>\r\n    //                     </FormGroup>\r\n    //                     <Button variant=\"primary\" type=\"submit\">\r\n    //                         Envoyer\r\n    //                     </Button>\r\n    //                 </Form>\r\n    //             </div>\r\n    //             )\r\n    //         }\r\n    //   }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n          error: null,\r\n          isLoaded: false,\r\n          items: []\r\n        };\r\n      }\r\n    \r\n      componentDidMount() {\r\n        fetch(\"https://api.example.com/items\")\r\n          .then(res => res.json())\r\n          .then(\r\n            (result) => {\r\n              this.setState({\r\n                isLoaded: true,\r\n                items: result.items\r\n              });\r\n            },\r\n            // Remarque : il est important de traiter les erreurs ici\r\n            // au lieu d'utiliser un bloc catch(), pour ne pas passer à la trappe\r\n            // des exceptions provenant de réels bugs du composant.\r\n            (error) => {\r\n              this.setState({\r\n                isLoaded: true,\r\n                error\r\n              });\r\n            }\r\n          )\r\n      }\r\n    \r\n      render() {\r\n        const { error, isLoaded, items } = this.state;\r\n        if (error) {\r\n          return <div>Erreur : {error.message}</div>;\r\n        } else if (!isLoaded) {\r\n          return <div>Chargement…</div>;\r\n        } else {\r\n          return (\r\n            <ul>\r\n              {items.map(item => (\r\n                <li key={item.name}>\r\n                  {item.name} {item.price}\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          );\r\n        }\r\n      }\r\n}\r\n\r\nexport default FreezeBee;"]},"metadata":{},"sourceType":"module"}